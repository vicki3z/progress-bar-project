// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Progress Bar Component should render without error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProgressBar
    limit={200}
    progressValue={20}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
            Object {
              "width": "10%",
            }
          }
        />,
        <span
          data-progress="progress-value"
        >
          20
        </span>,
        <span
          data-progress="limit-value"
        >
          200
        </span>,
        <span
          data-progress="percentage"
        >
          10
          %
        </span>,
      ],
      "className": undefined,
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": undefined,
          "style": Object {
            "width": "10%",
          },
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 20,
          "className": undefined,
          "data-progress": "progress-value",
        },
        "ref": null,
        "rendered": 20,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 200,
          "className": undefined,
          "data-progress": "limit-value",
        },
        "ref": null,
        "rendered": 200,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            10,
            "%",
          ],
          "className": undefined,
          "data-progress": "percentage",
        },
        "ref": null,
        "rendered": Array [
          10,
          "%",
        ],
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
              Object {
                "width": "10%",
              }
            }
          />,
          <span
            data-progress="progress-value"
          >
            20
          </span>,
          <span
            data-progress="limit-value"
          >
            200
          </span>,
          <span
            data-progress="percentage"
          >
            10
            %
          </span>,
        ],
        "className": undefined,
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": undefined,
            "style": Object {
              "width": "10%",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 20,
            "className": undefined,
            "data-progress": "progress-value",
          },
          "ref": null,
          "rendered": 20,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 200,
            "className": undefined,
            "data-progress": "limit-value",
          },
          "ref": null,
          "rendered": 200,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              10,
              "%",
            ],
            "className": undefined,
            "data-progress": "percentage",
          },
          "ref": null,
          "rendered": Array [
            10,
            "%",
          ],
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
